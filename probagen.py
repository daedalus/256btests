import numpy

numpy.random.seed(0)

#weights = [1567715, 1561636, 1590197, 1622986, 1612417, 1602382, 1595303, 1630549, 1597639, 1592786, 1596402, 1617842, 1593137, 1608695, 1604308, 1627591, 1587925, 1609200, 1594240, 1619330, 1580118, 1610870, 1607984, 1631024, 1592606, 1611001, 1610571, 1620101, 1582895, 1595337, 1609887, 1639654, 1598424, 1611434, 1616110, 1638719, 1586286, 1593789, 1599532, 1642365, 1601028, 1609369, 1617118, 1644443, 1608642, 1600661, 1601514, 1627268, 1599403, 1613117, 1618974, 1642915, 1607192, 1618021, 1604107, 1632989, 1587075, 1614748, 1622291, 1642553, 1607589, 1621220, 1620331, 1627504, 1589424, 1604558, 1625619, 1649589, 1602295, 1610098, 1623781, 1645451, 1598010, 1619721, 1616034, 1637174, 1611829, 1615728, 1617204, 1648817, 1597230, 1619943, 1625218, 1647344, 1602131, 1617774, 1620442, 1647801, 1604050, 1620031, 1628953, 1648113, 1611679, 1623287, 1620117, 1646222, 1605029, 1622435, 1625174, 1646090, 1613402, 1624309, 1625873, 1652671, 1607069, 1624425, 1628947, 1647701, 1615159, 1627763, 1631697, 1644320, 1610783, 1625733, 1631706, 1648013, 1613313, 1628634, 1631022, 1655325, 1609449, 1627825, 1628297, 1649843, 1611879, 1625625, 1634294, 1627831, 1615417, 1603768, 1632824, 1650138, 1626677, 1594359, 1636924, 1620362, 1620458, 1601050, 1631487, 1636519, 1615738, 1627523, 1634554, 1624012, 1612693, 1636547, 1608971, 1652438, 1626560, 1626703, 1601051, 1635672, 1614939, 1633794, 1639062, 1632595, 1594770, 1632587, 1634553, 1635486, 1622367, 1611514, 1639729, 1634410, 1626044, 1634555, 1636492, 1665508, 1596765, 1635091, 1614349, 1637539, 1624910, 1612252, 1608248, 1637482, 1621568, 1613665, 1641733, 1631963, 1600021, 1609314, 1614296, 1639657, 1583230, 1603221, 1631863, 1652530, 1613740, 1599522, 1628733, 1668889, 1607691, 1603779, 1634725, 1648939, 1620249, 1627122, 1629953, 1673122, 1623329, 1646988, 1625980, 1667304, 1604071, 1618531, 1633452, 1640518, 1563923, 1601329, 1579175, 1710909, 1664910, 1600723, 1685056, 1601072, 1583226, 1579641, 1576551, 1595728, 1596538, 1600801, 1571674, 1683971, 1586421, 1602207, 1582860, 1627249, 1566214, 1575755, 1579148, 1690321, 1647755, 1661481, 1690370, 1715086, 1648024, 1686838, 1690530, 1818248, 1750901, 1766413, 1776492, 1886278, 1770798, 1863046, 1865476, 1892578, 1760853, 1773180, 1781578, 1798685, 1761913, 1778463, 1777475, 1891691]


weights = [11915, 11966, 12055, 11920, 11874, 11965, 11908, 11900, 11973, 11876, 12070, 11938, 11974, 11947, 11936, 11935, 12048, 12142, 12033, 12081, 11813, 11983, 11949, 12083, 12051, 12018, 11830, 12030, 11930, 12023, 11967, 11871, 12037, 11902, 11995, 12074, 11959, 12099, 11897, 11978, 11921, 11993, 11873, 12143, 12086, 11951, 11963, 11905, 12161, 11885, 12095, 11918, 12053, 11985, 12070, 11922, 11830, 12018, 11989, 12044, 11926, 12028, 11969, 12069, 12008, 12015, 12137, 12002, 12054, 12126, 12022, 11898, 12031, 12109, 11856, 11996, 12090, 11789, 11931, 11983, 12096, 11845, 11996, 12078, 12062, 12046, 11880, 11969, 11956, 12094, 12160, 12001, 11988, 12067, 12113, 12047, 11828, 11894, 11921, 11951, 12086, 11855, 11962, 12081, 12027, 12057, 12063, 12051, 12000, 12053, 12119, 11951, 12049, 12076, 12028, 11915, 12015, 12033, 12033, 12071, 12263, 12127, 12080, 11880, 11999, 12073, 12039, 11998, 11972, 12010, 11925, 12172, 11941, 11974, 12065, 12082, 11921, 12008, 12124, 11989, 12056, 11945, 12078, 11965, 11968, 11986, 11953, 11971, 12054, 11982, 12037, 11947, 11922, 11983, 11933, 11914, 11998, 12024, 12052, 12106, 12030, 11742, 11918, 11887, 12082, 12092, 12009, 11995, 11984, 11950, 11939, 12060, 12064, 11874, 12053, 12055, 12058, 11975, 11933, 11921, 11974, 12063, 11852, 12085, 11852, 11866, 12002, 11922, 12031, 11997, 12070, 12099, 12000, 11870, 12019, 11973, 11933, 12016, 11956, 11990, 11829, 12005, 11992, 12063, 12150, 11945, 12019, 12117, 12071, 12035, 12083, 11923, 11993, 11972, 11991, 12060, 12094, 12070, 12012, 11997, 12179, 12151, 12073, 11954, 11970, 12044, 11991, 12125, 12060, 11926, 12013, 12183, 12028, 12017, 12099, 12176, 11952, 12146, 12189, 12063, 12071, 12315, 12136, 12222, 12092, 12060, 12169, 12267, 11977, 12107, 12096, 12110, 12166, 12111, 12062, 12198]


count = 3808866.0
count = 24414.0
probs = [0 for _ in range(0,256)]

def recalculate_probs(mult):
	for i in range(0,256):
		prob = (weights[i] / count) * mult
		# proba 1, proba 0
		probs[i] = [prob,1-prob]

#print probs

def gen_samples():
	accum = ""
	for i in range(0,256):
		probs[i]
		bit = numpy.random.choice([1,0], p=probs[i])
		accum += str(bit)
	#print len(accum)

	return int(accum,2)
	#print accum
	#print h
	#print hex(h)

#gen()
def gen():
	for j in range(1,199):
		recalculate_probs(j/100.0)
		for k in range(0,1000):
			i = gen_samples()
			print hex(i).replace('0x','').replace('L','').zfill(64)

gen()
